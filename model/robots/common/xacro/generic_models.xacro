<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="generic_models">

  <xacro:macro name="standard_link" params="name mass origin_rpy origin_xyz ixx ixy ixz iyy iyz izz visual_mesh collision_mesh">
    <link name="${name}">
      <inertial>
        <mass value="${mass}"/>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" 
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
        </inertial>  
        <visual>
          <geometry>
            <mesh filename="${visual_mesh}"/>
          </geometry>
          <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
        </visual>
        <collision>
        <geometry>
          <mesh filename="${collision_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="link_no_mesh_no_collision" params="name mass origin_rpy origin_xyz ixx ixy ixz iyy iyz izz">
    <link name="${name}">
      <inertial>
        <mass value="${mass}"/>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" 
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
        </inertial>
    </link>
  </xacro:macro>

  <xacro:macro name="link_no_mesh" params="name width height depth mass origin_xyz origin_rpy ixx ixy ixz iyy iyz izz">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${ixx}"  ixy="${ixy}" ixz="${ixz}"
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <material name="Gray"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="link_box_collision_mesh_visual"
          params="name width height depth mass inertial_xyz inertial_rpy ixx ixy ixz iyy iyz izz visual_mesh box_xyz box_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${mass}" />
        <origin rpy="${inertial_rpy}" xyz="${inertial_xyz}"/>
        <inertia ixx="${ixx}"  ixy="${ixy}" ixz="${ixz}"
                 iyy="${iyy}" iyz="${iyz}"
                 izz="${izz}" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="${visual_mesh}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </visual>
      <collision>
        <geometry>
          <box size="${width} ${height} ${depth}"/>
        </geometry>
        <origin rpy="${box_rpy}" xyz="${box_xyz}"/>
      </collision>
    </link>
  </xacro:macro>

  <xacro:property name="virtual_link_mass" value="0.1"/>
  <xacro:property name="virtual_link_radius" value="0.05"/>
  <xacro:property name="virtual_link_height" value="0.05"/>
  <xacro:macro name="virtual_link" params="name origin_xyz origin_rpy">
    <link name="${name}">
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
    </link>
  </xacro:macro>

  <xacro:property name="massless_virtual_link_mass" value="0.0000001"/>
  <xacro:property name="massless_virtual_link_radius" value="0.0000001"/>
  <xacro:property name="massless_virtual_link_height" value="0.0000001"/>
  <xacro:macro name="massless_virtual_link" params="name origin_xyz origin_rpy">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${massless_virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(massless_virtual_link_mass*(3*massless_virtual_link_radius*massless_virtual_link_radius + massless_virtual_link_height*massless_virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(massless_virtual_link_mass*(3*massless_virtual_link_radius*massless_virtual_link_radius + massless_virtual_link_height*massless_virtual_link_height))/12}" iyz="0.0"
                 izz="${(massless_virtual_link_mass*massless_virtual_link_radius*massless_virtual_link_radius)/2}" />
      </inertial>
    </link>
  </xacro:macro>

  <xacro:macro name="virtual_link_with_visual" params="name origin_xyz origin_rpy mesh_filename">
    <link name="${name}">
      <!-- Virtual Link -->
      <inertial>
        <mass value="${virtual_link_mass}" />
        <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
        <inertia ixx="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" ixy="0.0" ixz="0.0"
                 iyy="${(virtual_link_mass*(3*virtual_link_radius*virtual_link_radius + virtual_link_height*virtual_link_height))/12}" iyz="0.0"
                 izz="${(virtual_link_mass*virtual_link_radius*virtual_link_radius)/2}" />
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
        <material name="gold">
          <color rgba="1 0.67 0 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="${mesh_filename}"/>
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="revolute_joint" params="jointName parent child origin_xyz origin_rpy axis *limits">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <dynamics damping="1.0" friction="0.0"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="continuous_joint" params="jointName parent child origin_xyz origin_rpy axis">
    <joint name="${jointName}" type="continuous">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
    <gazebo reference="${jointName}">
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="revolute_joint_ex" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits *controller_gains">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <xacro:insert_block name="controller_gains" />
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="revolute_joint_ex_mimic" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits *controller_gains *mimic">
    <joint name="${jointName}" type="revolute">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="${axis}"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <xacro:insert_block name="limits" />
      <xacro:insert_block name="controller_gains" />
      <xacro:insert_block name="mimic" />
      <dynamics damping="${damping}" friction="${friction}"/>
    </joint>
    <gazebo reference="${jointName}">
      <provideFeedback>1</provideFeedback>
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>
  
  <xacro:macro name="floating_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="floating">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
    <gazebo reference="${jointName}">
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="fixed_joint" params="jointName parent child origin_xyz origin_rpy">
    <joint name="${jointName}" type="fixed">
      <origin rpy="${origin_rpy}" xyz="${origin_xyz}"/>
      <axis xyz="0 0 1"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
    </joint>
    <gazebo reference="${jointName}">
      <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>
  </xacro:macro>
  
  <xacro:property name="is_model_reduced" value="false"/>
  <xacro:macro name="revolute_joint_ex_reducible" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits *controller_gains">
    <xacro:unless value="${is_model_reduced}">
      <xacro:revolute_joint_ex 
        jointName="${jointName}"
        parent="${parent}"
        child="${child}"
        origin_xyz="${origin_xyz}"
        origin_rpy="${origin_rpy}"
        axis="${axis}"
        damping="${damping}"
        friction="${friction}">
        <xacro:insert_block name="limits" />
        <xacro:insert_block name="controller_gains" />
      </xacro:revolute_joint_ex>
    </xacro:unless>
    <xacro:if value="${is_model_reduced}">
      <xacro:fixed_joint 
        jointName="${jointName}"
        parent="${parent}"
        child="${child}"
        origin_xyz="${origin_xyz}"
        origin_rpy="${origin_rpy}">
      </xacro:fixed_joint>
    </xacro:if>
  </xacro:macro>

  <xacro:macro name="revolute_joint_ex_mimic_reducible" params="jointName parent child origin_xyz origin_rpy axis damping friction *limits *controller_gains *mimic">
    <xacro:unless value="${is_model_reduced}">
      <xacro:revolute_joint_ex_mimic
        jointName="${jointName}"
        parent="${parent}"
        child="${child}"
        origin_xyz="${origin_xyz}"
        origin_rpy="${origin_rpy}"
        axis="${axis}"
        damping="${damping}"
        friction="${friction}">
        <xacro:insert_block name="limits" />
        <xacro:insert_block name="controller_gains" />
        <xacro:insert_block name="mimic" />
      </xacro:revolute_joint_ex_mimic>
    </xacro:unless>
    <xacro:if value="${is_model_reduced}">
      <xacro:fixed_joint 
        jointName="${jointName}"
        parent="${parent}"
        child="${child}"
        origin_xyz="${origin_xyz}"
        origin_rpy="${origin_rpy}">
      </xacro:fixed_joint>
    </xacro:if>
  </xacro:macro>

  <xacro:macro name="virtual_fixed_frame_offset" params="name parentLink origin_xyz origin_rpy">
    <xacro:virtual_link name="${name}_Frame"
                    origin_rpy="0 0 0"
                    origin_xyz="0 0 0"/>

    <xacro:fixed_joint jointName="${name}_Offset"
                       parent="${parentLink}" child="${name}_Frame"
                       origin_rpy="${origin_rpy}"
                       origin_xyz="${origin_xyz}"/>
  </xacro:macro>
  <xacro:macro name="massless_virtual_fixed_frame_offset" params="name parentLink origin_xyz origin_rpy">
    <xacro:massless_virtual_link name="${name}_Frame"
                    origin_rpy="0 0 0"
                    origin_xyz="0 0 0"/>

    <xacro:fixed_joint jointName="${name}_Offset"
                       parent="${parentLink}" child="${name}_Frame"
                       origin_rpy="${origin_rpy}"
                       origin_xyz="${origin_xyz}"/>
  </xacro:macro>

  <xacro:macro name="simple_transmission" params="jointName actuatorName nodeName actuatorApi">
    <transmission name="${jointName}Transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${actuatorName}">
        <node name="${nodeName}"/>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuatorApi}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="simple_position_transmission" params="jointName actuatorName nodeName actuatorApi">
    <transmission name="${jointName}Transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="${actuatorName}">
        <node name="${nodeName}"/>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuatorApi}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="simple_effort_transmission_with_one_child_joint" params="jointName actuatorName nodeName actuatorApi child1JointName child1Ratio">
    <transmission name="${jointName}Transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <child name="${child1JointName}" ratio="${child1Ratio}"/>
      </joint>
      <actuator name="${actuatorName}">
        <node name="${nodeName}"/>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuatorApi}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="simple_effort_transmission_with_three_child_joints" params="jointName actuatorName nodeName actuatorApi child1JointName child1Ratio child2JointName child2Ratio child3JointName child3Ratio">
    <transmission name="${jointName}Transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <child name="${child1JointName}" ratio="${child1Ratio}"/>
        <child name="${child2JointName}" ratio="${child2Ratio}"/>
        <child name="${child3JointName}" ratio="${child3Ratio}"/>
      </joint>
      <actuator name="${actuatorName}">
        <node name="${nodeName}"/>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuatorApi}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="simple_passive_transmission" params="jointName nodeName apiName reflect">
    <transmission name="${jointName}PassiveTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>JointStateInterface</hardwareInterface>
      </joint>
      <actuator name="${jointName}PassiveActuator">
        <node name="${nodeName}"/>
        <mechanicalReduction>${reflect}</mechanicalReduction>
        <api name="${apiName}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="simple_forearm_position_transmission" params="jointName actuatorName nodeName actuatorApi reflect">
    <transmission name="${jointName}Transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${jointName}">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="${actuatorName}">
        <node name="${nodeName}"/>
        <mechanicalReduction>${reflect}</mechanicalReduction>
        <api name="${actuatorApi}" />
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="pushrod_transmission" params="transmissionName transmissionType joint1Name joint2Name joint1Role joint2Role actuator1Name actuator2Name actuator1Node actuator2Node actuator1Api actuator2Api actuator1Role actuator2Role">
    <transmission name="${transmissionName}">
      <type>${transmissionType}</type>
      <joint name="${joint1Name}">
        <role>${joint1Role}</role>
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <joint name="${joint2Name}">
        <role>${joint2Role}</role>
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
       <actuator name="${actuator1Name}">
        <node name="${actuator1Node}"/>
        <role>${actuator1Role}</role>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuator1Api}"/>
      </actuator>
      <actuator name="${actuator2Name}">
        <node name="${actuator2Node}"/>
        <role>${actuator2Role}</role>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuator2Api}"/>
      </actuator>
    </transmission>
  </xacro:macro>

  <xacro:macro name="pushrod_transmission_position_control" params="transmissionName transmissionType joint1Name joint2Name joint1Role joint2Role actuator1Name actuator2Name actuator1Node actuator2Node actuator1Api actuator2Api actuator1Role actuator2Role">
    <transmission name="${transmissionName}">
      <type>robot_transmission_interface/${transmissionType}</type>
      <joint name="${joint1Name}">
        <role>${joint1Role}</role>
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
      <joint name="${joint2Name}">
        <role>${joint2Role}</role>
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
       <actuator name="${actuator1Name}">
        <node name="${actuator1Node}"/>
        <role>${actuator1Role}</role>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuator1Api}"/>
      </actuator>
      <actuator name="${actuator2Name}">
        <node name="${actuator2Node}"/>
        <role>${actuator2Role}</role>
        <mechanicalReduction>1</mechanicalReduction>
        <api name="${actuator2Api}"/>
      </actuator>
    </transmission>
  </xacro:macro>

</robot>
